export const posts = {
  results: [
    {
      id: 1,
      title: 'Using Spark to build a recommendation engine',
      date: '13/09/2021',
      body: '<div> <p>I need to render this article</p> </div>',
      icon: 'https://logowik.com/content/uploads/images/scala3486.jpg',
    },
    {
      id: 2,
      title: 'Optimizing the poisson algorithm execution using CUDA in C++',
      date: '13/09/2021',
      body: 'Describe the project',
      icon: 'https://jtes.net/wp-content/uploads/2015/05/NVIDIA_CUDA_V_2C_r.jpg',
    },
    {
      id: 3,
      title:
        'Creating a neural network to classify numbers using Keras in Python',
      date: '13/09/2021',
      body: 'Talk about the project for EPFL',
      icon: 'https://www.logiciels.pro/wp-content/uploads/2021/05/keras-avis-prix-alternatives-logiciel.webp',
    },
    {
      id: 4,
      title: 'Creating a travelling website using Angular',
      date: '13/09/2021',
      body: '<b> <a href="https://travel-angular-aiday.web.app/">Live link: https://travel-angular-aiday.web.app/</a></b><br/><b> <a href="https://github.com/aiday-mar/Angular-travel-app"> GitHub: https://github.com/aiday-mar/Angular-travel-app </a> </b> <br/>See below for the description of the key features of the project.<br/><br/><br/><img src="https://raw.githubusercontent.com/aiday-mar/Angular-travel-app/master/Angular_Picture_1.PNG"/><br/><br/><img src="https://raw.githubusercontent.com/aiday-mar/Angular-travel-app/master/Angular_Picture_2.PNG"/><br/><br/><b>Customer support chat window</b><br/><br/>The chat window is made using the Kendo library. A div was appended to the top of the window, which can be used to close the window.<br/><br/><b>Booking interface</b><br/><br/>There is a booking page, where you can search for a flight (the results are filtered on typing). It is also possible to select the date range of the flight using the Material UI date calendar picker. You can select the flights of interest by clicking on the shopping cart icon. The select flights will appear in the checkout. In order to do this, I implemented a booking service as follows:<br/><br/><code style="margin-left:20%"> <div><span>import</span><span>&nbsp;{&nbsp;</span><span>Injectable</span><span>&nbsp;}&nbsp;</span><span>from</span><span>&nbsp;</span><span>"@angular/core"</span><span>;</span></div> <br /> <div><span>interface</span><span>&nbsp;</span><span>Flight</span><span>&nbsp;{</span></div> <div><span>&nbsp;&nbsp;</span><span>id</span><span>:&nbsp;</span><span>String</span><span>;</span></div> <div><span>&nbsp;&nbsp;</span><span>from</span><span>:&nbsp;</span><span>String</span><span>;</span></div> <div><span>&nbsp;&nbsp;</span><span>to</span><span>:&nbsp;</span><span>String</span><span>;</span></div> <div><span>&nbsp;&nbsp;</span><span>departure</span><span>:&nbsp;</span><span>String</span><span>;</span></div> <div><span>&nbsp;&nbsp;</span><span>arrival</span><span>:&nbsp;</span><span>String</span><span>;</span></div> <div><span>&nbsp;&nbsp;</span><span>price</span><span>:&nbsp;</span><span>String</span><span>;</span></div> <div><span>}</span></div> <br /> <div><span>@</span><span>Injectable</span><span>()</span></div> <div><span>export</span><span>&nbsp;</span><span>class</span><span>&nbsp;</span><span>BookingService</span><span>&nbsp;{</span></div> <div><span>&nbsp;&nbsp;</span><span>flightsToPay</span><span>:&nbsp;</span><span>Flight</span><span>[]&nbsp;=&nbsp;[];</span></div> <div><span>&nbsp;&nbsp;</span><span>flightIdsToPay</span><span>:&nbsp;</span><span>String</span><span>[]&nbsp;=&nbsp;[];</span></div> <div><span>&nbsp;&nbsp;</span><span>totalFlights</span><span>:&nbsp;</span><span>number</span><span>&nbsp;=&nbsp;</span><span>0</span><span>;</span></div> <br /> <div><span>&nbsp;&nbsp;</span><span>constructor</span><span>()&nbsp;{}</span></div> <div><span>}</span></div> </code> <br/><br/>Then I use the booking service as follows in the booking component.<br/><br/><code style="margin-left:20%"><span>export</span><span>&nbsp;</span><span>class</span><span>&nbsp;</span><span>BookComponent</span><span>&nbsp;</span><span>implements</span><span>&nbsp;</span><span>OnInit</span><span>&nbsp;{</span></div><div><span>&nbsp;&nbsp;</span><span>flights</span><span>:&nbsp;</span><span>Flight</span><span>[]&nbsp;=&nbsp;</span><span>flightsData</span><span>;</span></div><p></p><div><span>&nbsp;&nbsp;</span><span>constructor</span><span>(</span><span>private</span><span>&nbsp;</span><span>bookingService</span><span>:&nbsp;</span><span>BookingService</span><span>)&nbsp;{}</span></div><p></p><div><span>&nbsp;&nbsp;</span><span>saveBooking</span><span>(</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>id</span><span>:&nbsp;</span><span>string</span><span>,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>from</span><span>:&nbsp;</span><span>string</span><span>,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>to</span><span>:&nbsp;</span><span>string</span><span>,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>departure</span><span>:&nbsp;</span><span>string</span><span>,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>arrival</span><span>:&nbsp;</span><span>string</span><span>,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>price</span><span>:&nbsp;</span><span>string</span></div><div><span>&nbsp;&nbsp;)&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>const</span><span>&nbsp;</span><span>toSave</span><span>:&nbsp;</span><span>Flight</span><span>&nbsp;=&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>id:</span><span>&nbsp;</span><span>id</span><span>,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>from:</span><span>&nbsp;</span><span>from</span><span>,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>to:</span><span>&nbsp;</span><span>to</span><span>,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>departure:</span><span>&nbsp;</span><span>departure</span><span>,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>arrival:</span><span>&nbsp;</span><span>arrival</span><span>,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>price:</span><span>&nbsp;</span><span>price</span><span>,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;};</span></div><p></p><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>if</span><span>&nbsp;(</span><span>this</span><span>.</span><span>bookingService</span><span>.</span><span>flightIdsToPay</span><span>.</span><span>indexOf</span><span>(</span><span>id</span><span>)&nbsp;==&nbsp;-</span><span>1</span><span>)&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>bookingService</span><span>.</span><span>flightsToPay</span><span>.</span><span>push</span><span>(</span><span>toSave</span><span>);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>bookingService</span><span>.</span><span>flightIdsToPay</span><span>&nbsp;=&nbsp;</span><span>this</span><span>.</span><span>bookingService</span><span>.</span><span>flightsToPay</span><span>.</span><span>map</span><span>(</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(</span><span>entry</span><span>)&nbsp;</span><span>=&gt;</span><span>&nbsp;</span><span>entry</span><span>.</span><span>id</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>bookingService</span><span>.</span><span>totalFlights</span><span>&nbsp;=</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>bookingService</span><span>.</span><span>totalFlights</span><span>&nbsp;+&nbsp;</span><span>Number</span><span>(</span><span>price</span><span>);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</span><span>else</span><span>&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>bookingService</span><span>.</span><span>flightsToPay</span><span>&nbsp;=</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>bookingService</span><span>.</span><span>flightsToPay</span><span>.</span><span>filter</span><span>((</span><span>entry</span><span>)&nbsp;</span><span>=&gt;</span><span>&nbsp;</span><span>entry</span><span>.</span><span>id</span><span>&nbsp;!==&nbsp;</span><span>id</span><span>);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>bookingService</span><span>.</span><span>flightIdsToPay</span><span>&nbsp;=&nbsp;</span><span>this</span><span>.</span><span>bookingService</span><span>.</span><span>flightsToPay</span><span>.</span><span>map</span><span>(</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(</span><span>entry</span><span>)&nbsp;</span><span>=&gt;</span><span>&nbsp;</span><span>entry</span><span>.</span><span>id</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>bookingService</span><span>.</span><span>totalFlights</span><span>&nbsp;=</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>bookingService</span><span>.</span><span>totalFlights</span><span>&nbsp;-&nbsp;</span><span>Number</span><span>(</span><span>price</span><span>);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;}</span></div><div><span>&nbsp;&nbsp;}</span></div><p></p><div><span>&nbsp;&nbsp;</span><span>getColor</span><span>(</span><span>id</span><span>:&nbsp;</span><span>string</span><span>)&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>if</span><span>&nbsp;(</span><span>this</span><span>.</span><span>bookingService</span><span>.</span><span>flightIdsToPay</span><span>.</span><span>indexOf</span><span>(</span><span>id</span><span>)&nbsp;==&nbsp;-</span><span>1</span><span>)&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>return</span><span>&nbsp;</span><span>"grey"</span><span>;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</span><span>else</span><span>&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>return</span><span>&nbsp;</span><span>"green"</span><span>;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;}</span></div><div><span>&nbsp;&nbsp;}</span></div><p></p><div><span>&nbsp;&nbsp;</span><span>onChangeFrom</span><span>(</span><span>event</span><span>)&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>flights</span><span>&nbsp;=&nbsp;</span><span>flightsData</span><span>.</span><span>filter</span><span>(</span><span>function</span><span>&nbsp;(</span><span>entry</span><span>)&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>return</span><span>&nbsp;</span><span>entry</span><span>.</span><span>from</span><span>.</span><span>toLowerCase</span><span>().</span><span>includes</span><span>(</span><span>event</span><span>.</span><span>toLowerCase</span><span>());</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;});</span></div><div><span>&nbsp;&nbsp;}</span></div><p></p><div><span>&nbsp;&nbsp;</span><span>onChangeTo</span><span>(</span><span>event</span><span>)&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>flights</span><span>&nbsp;=&nbsp;</span><span>flightsData</span><span>.</span><span>filter</span><span>(</span><span>function</span><span>&nbsp;(</span><span>entry</span><span>)&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>return</span><span>&nbsp;</span><span>entry</span><span>.</span><span>to</span><span>.</span><span>toLowerCase</span><span>().</span><span>includes</span><span>(</span><span>event</span><span>.</span><span>toLowerCase</span><span>());</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;});</span></div><div><span>&nbsp;&nbsp;}</span></div><p></p><div><span>&nbsp;&nbsp;</span><span>onClickSubmit</span><span>(</span><span>data</span><span>)&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>flights</span><span>&nbsp;=&nbsp;</span><span>flightsData</span><span>.</span><span>filter</span><span>(</span><span>function</span><span>&nbsp;(</span><span>entry</span><span>)&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>return</span><span>&nbsp;</span><span>entry</span><span>.</span><span>from</span><span>&nbsp;==&nbsp;</span><span>data</span><span>.</span><span>from</span><span>&nbsp;&amp;&amp;&nbsp;</span><span>entry</span><span>.</span><span>to</span><span>&nbsp;==&nbsp;</span><span>data</span><span>.</span><span>to</span><span>;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;});</span></div><div><span>&nbsp;&nbsp;}</span></div><p></p><div><span>&nbsp;&nbsp;</span><span>ngOnInit</span><span>()&nbsp;{}</span></div><div><span>}</span></code><br/><br/><b>Payment with stripe</b><br/><br/>Once the flights are booked it is possible to pay for them. The payment component is implemented using the Stripe library.<br/><br/><code><div style="margin-left:20%"><div><span>export</span><span>&nbsp;</span><span>class</span><span>&nbsp;</span><span>PaymentComponent</span><span>&nbsp;</span><span>implements</span><span>&nbsp;</span><span>OnInit</span><span>&nbsp;{</span></div> <div><span>&nbsp;&nbsp;</span><span>flightsToPay</span><span>:&nbsp;</span><span>Flight</span><span>[];</span></div> <div><span>&nbsp;&nbsp;</span><span>paymentHandler</span><span>:</span><span>any</span><span>&nbsp;=&nbsp;</span><span>null</span><span>;</span></div> <br /> <div><span>&nbsp;&nbsp;</span><span>constructor</span><span>(</span><span>private</span><span>&nbsp;</span><span>bookingService</span><span>:&nbsp;</span><span>BookingService</span><span>)&nbsp;{</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>flightsToPay</span><span>&nbsp;=&nbsp;</span><span>bookingService</span><span>.</span><span>flightsToPay</span><span>;</span></div> <div><span>&nbsp;&nbsp;}</span></div> <br /> <div><span>&nbsp;&nbsp;</span><span>ngOnInit</span><span>()&nbsp;{</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>invokeStripe</span><span>();</span></div> <div><span>&nbsp;&nbsp;}</span></div> <div><span>&nbsp;&nbsp;</span></div> <div><span>&nbsp;&nbsp;</span><span>makePayment</span><span>(</span><span>amount</span><span>)&nbsp;{</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>const</span><span>&nbsp;</span><span>paymentHandler</span><span>&nbsp;=&nbsp;(&lt;</span><span>any</span><span>&gt;</span><span>window</span><span>).</span><span>StripeCheckout</span><span>.</span><span>configure</span><span>({</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>key:</span><span>&nbsp;</span><span>"PK"</span><span>,</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>locale:</span><span>&nbsp;</span><span>"auto"</span><span>,</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>token</span><span>:</span><span>&nbsp;</span><span>function</span><span>&nbsp;(</span><span>stripeToken</span><span>:&nbsp;</span><span>any</span><span>)&nbsp;{</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>console</span><span>.</span><span>log</span><span>(</span><span>stripeToken</span><span>)</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>alert</span><span>(</span><span>"Stripe&nbsp;token&nbsp;generated!"</span><span>);</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;});</span></div> <div><span>&nbsp;&nbsp;</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>paymentHandler</span><span>.</span><span>open</span><span>({</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>name:</span><span>&nbsp;</span><span>"Payment"</span><span>,</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>amount:</span><span>&nbsp;</span><span>amount</span><span>&nbsp;*&nbsp;</span><span>100</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;});</span></div> <div><span>&nbsp;&nbsp;}</span></div> <div><span>&nbsp;&nbsp;</span></div> <div><span>&nbsp;&nbsp;</span><span>invokeStripe</span><span>()&nbsp;{</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>if</span><span>(!</span><span>window</span><span>.</span><span>document</span><span>.</span><span>getElementById</span><span>(</span><span>"stripe-script"</span><span>))&nbsp;{</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>const</span><span>&nbsp;</span><span>script</span><span>&nbsp;=&nbsp;</span><span>window</span><span>.</span><span>document</span><span>.</span><span>createElement</span><span>(</span><span>"script"</span><span>);</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>script</span><span>.</span><span>id</span><span>&nbsp;=&nbsp;</span><span>"stripe-script"</span><span>;</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>script</span><span>.</span><span>type</span><span>&nbsp;=&nbsp;</span><span>"text/javascript"</span><span>;</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>script</span><span>.</span><span>src</span><span>&nbsp;=&nbsp;</span><span>"https://checkout.stripe.com/checkout.js"</span><span>;</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>script</span><span>.</span><span>onload</span><span>&nbsp;=&nbsp;()&nbsp;</span><span>=&gt;</span><span>&nbsp;{</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>paymentHandler</span><span>&nbsp;=&nbsp;(&lt;</span><span>any</span><span>&gt;</span><span>window</span><span>).</span><span>StripeCheckout</span><span>.</span><span>configure</span><span>({</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>key:</span><span>&nbsp;</span><span>"PK"</span><span>,</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>locale:</span><span>&nbsp;</span><span>"auto"</span><span>,</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>token</span><span>:</span><span>&nbsp;</span><span>function</span><span>&nbsp;(</span><span>stripeToken</span><span>:&nbsp;</span><span>any</span><span>)&nbsp;{</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>console</span><span>.</span><span>log</span><span>(</span><span>stripeToken</span><span>)</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>alert</span><span>(</span><span>"Payment&nbsp;has&nbsp;been&nbsp;successfull!"</span><span>);</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>window</span><span>.</span><span>document</span><span>.</span><span>body</span><span>.</span><span>appendChild</span><span>(</span><span>script</span><span>);</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;}</span></div> <div><span>&nbsp;&nbsp;}</span></div> <div><span>}</span></div></div></code>',
      icon: 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Angular_full_color_logo.svg/1200px-Angular_full_color_logo.svg.png',
    },
    {
      id: 5,
      title:
        'Using GraphQL, Apollo and Websocket.IO to create a studying application',
      date: '13/09/2021',
      body: 'Talk about the GraphQL project',
      icon: 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/GraphQL_Logo.svg/1200px-GraphQL_Logo.svg.png',
    },
    {
      id: 6,
      title: 'Coding Portfolio built using React',
      date: '16/11/2021',
      body: "<b> <a href='https://github.com/aiday-mar/React-personal-portfolio'> GitHub: https://github.com/aiday-mar/React-personal-portfolio </a> </b> <br/><br/><br/>This portfolio website is built using React. This website has several key features. <br/><br/><br/> <b> <div id='routing'> Routing </div> </b> <br/><br/> The routing in this portfolio is made with the react-router-dom library, specifically using the Switch and Route components. In order to be able to access the posts on this site, I parse the request URL by fetching the article corresponding to the ID in the URL, as follows : <br/><br/> <code style='margin-left:20%'> &ltSwitch&gt &ltRoute path='/post/:id' component={Post} /&gt &lt/Switch&gt </code> <br/><br/> <b> <div id='navigation'> Navigation Bar </div></b> <br/><br/> The navigation bar is configured to be sticky, so that it sticks to the top of the navigation window. <br/><br/><br/> <b><div id='intro'>Introductory CSS animation </div></b><br/><br/> The CSS animations is displayed only once per session, and only when one accesses the main page of the website. That is if a person access a specific article, even on a new session, the CSS animation will not be displayed. The constructor in the routing component is as follows : <br/><br/> <code style='margin-left: 20%'><div> <div><span>constructor</span><span>()&nbsp;{</span></div> <div><span>&nbsp; &nbsp; super</span><span>();</span></div> <br /> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>if</span><span>&nbsp;(</span><span>window</span><span>.</span><span>location</span><span>.</span><span>pathname</span><span>&nbsp;===&nbsp;</span><span>'/'</span><span>)&nbsp;{</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>state</span><span>&nbsp;=&nbsp;{</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>animate:</span><span>&nbsp;</span><span>true</span><span>,</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>showIntro:</span><span>&nbsp;</span><span>true</span><span>,</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</span><span>else</span><span>&nbsp;{</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>state</span><span>&nbsp;=&nbsp;{</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>animate:</span><span>&nbsp;</span><span>false</span><span>,</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>showIntro:</span><span>&nbsp;</span><span>false</span><span>,</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;}</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>myRef</span><span>&nbsp;=&nbsp;</span><span>React</span><span>.</span><span>createRef</span><span>();</span></div> <div><span>}</span></div> </div></code> <br/> <br/>In the render method we have: <br/> <br/> <code style='margin-left: 20%;'> <div><span>render</span><span>()&nbsp;{</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>return</span><span>&nbsp;(</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;</span><span>div</span><span>&nbsp;</span><span>className</span><span>=</span><span>'Body'</span><span>&gt;</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>{</span><span>this</span><span>.</span><span>state</span><span>.</span><span>animate</span><span>&nbsp;&amp;&amp;&nbsp;</span><span>this</span><span>.</span><span>state</span><span>.</span><span>showIntro</span><span>&nbsp;?&nbsp;</span><span>&lt;</span><span>Intro</span><span>&nbsp;</span><span>/&gt;</span><span>&nbsp;:&nbsp;</span><span>null</span><span>}</span></div> <div><span>&nbsp; &nbsp; &nbsp; &nbsp; ...</span><span></span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;/</span><span>div</span><span>&gt;</span></div> <div><span>&nbsp;&nbsp;&nbsp;&nbsp;);</span></div> <div><span>}</span></div></code> </br></br> And we have the following ComponentDidMount method: <br/> <br/> <code style='margin-left:20%'><div><span>componentDidMount</span><span>()&nbsp;{</span></div><div></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>const</span><span>&nbsp;</span><span>el</span><span>&nbsp;=&nbsp;</span><span>document</span><span>.</span><span>querySelector</span><span>(</span><span>'.loader-container'</span><span>);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>if</span><span>&nbsp;(</span><span>el</span><span>)&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>el</span><span>.</span><span>remove</span><span>();&nbsp;</span><span>//&nbsp;removing&nbsp;the&nbsp;spinner&nbsp;element</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>setState</span><span>({&nbsp;</span><span>loading:</span><span>&nbsp;</span><span>false</span><span>&nbsp;});&nbsp;</span><span>//&nbsp;showing&nbsp;the&nbsp;app</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;}</span></div><div><span></span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>if</span><span>&nbsp;(</span><span>window</span><span>.</span><span>location</span><span>.</span><span>pathname</span><span>&nbsp;===&nbsp;</span><span>'/'</span><span>)&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>if</span><span>&nbsp;(</span><span>window</span><span>.</span><span>sessionStorage</span><span>.</span><span>getItem</span><span>(</span><span>'firstLoadDone'</span><span>)&nbsp;===&nbsp;</span><span>null</span><span>)&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>setState</span><span>({</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>animate:</span><span>&nbsp;</span><span>true</span><span>,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>window</span><span>.</span><span>sessionStorage</span><span>.</span><span>setItem</span><span>(</span><span>'firstLoadDone'</span><span>,&nbsp;</span><span>1</span><span>);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>document</span><span>.</span><span>body</span><span>.</span><span>style</span><span>.</span><span>overflow</span><span>&nbsp;=&nbsp;</span><span>'hidden'</span><span>;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</span><span>else</span><span>&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>setState</span><span>({</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>animate:</span><span>&nbsp;</span><span>false</span><span>,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></div><div><span></span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>if</span><span>&nbsp;(</span><span>this</span><span>.</span><span>state</span><span>.</span><span>animate</span><span>&nbsp;==&nbsp;</span><span>true</span><span>)&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>setTimeout</span><span>(()&nbsp;</span><span>=&gt;</span><span>&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>myRef</span><span>.</span><span>current</span><span>.</span><span>scrollIntoView</span><span>({</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>behavior:</span><span>&nbsp;</span><span>'smooth'</span><span>,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>block:</span><span>&nbsp;</span><span>'start'</span><span>,</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>setTimeout</span><span>(()&nbsp;</span><span>=&gt;</span><span>&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>document</span><span>.</span><span>body</span><span>.</span><span>style</span><span>.</span><span>overflow</span><span>&nbsp;=&nbsp;</span><span>'unset'</span><span>;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>state</span><span>.</span><span>showIntro</span><span>&nbsp;=&nbsp;</span><span>false</span><span>;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>this</span><span>.</span><span>forceUpdate</span><span>();</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;</span><span>1000</span><span>);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;</span><span>3000</span><span>);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;}</span></div><div><span>}</span></div></code> <br/> <br/><b><div id='material'>Material UI</div></b> <br/> <br/> The cards visible on the home page are made using the Material UI library. The cards are arranged inside of a box. <br/><br/><br/><div id='slideshow'><div><b>Slideshow</b></div><br/><br/>There is a slideshow on the main page where I introduce myself. The code for that is: <br/><br/> <code style='margin-left:20%'><span>export</span><span>&nbsp;</span><span>default</span><span>&nbsp;</span><span>function</span><span>&nbsp;</span><span>Slideshow</span><span>()&nbsp;{</span></div><div></div><div><span>&nbsp;&nbsp;</span><span>const</span><span>&nbsp;[</span><span>index</span><span>,&nbsp;</span><span>setIndex</span><span>]&nbsp;=&nbsp;</span><span>React</span><span>.</span><span>useState</span><span>(</span><span>0</span><span>);</span></div><div><span>&nbsp;&nbsp;</span><span>const</span><span>&nbsp;</span><span>timeoutRef</span><span>&nbsp;=&nbsp;</span><span>React</span><span>.</span><span>useRef</span><span>(</span><span>null</span><span>);</span></div><div><span></span></div><div><span>&nbsp;&nbsp;</span><span>function</span><span>&nbsp;</span><span>resetTimeout</span><span>()&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>if</span><span>&nbsp;(</span><span>timeoutRef</span><span>.</span><span>current</span><span>)&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>clearTimeout</span><span>(</span><span>timeoutRef</span><span>.</span><span>current</span><span>);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;}</span></div><div><span>&nbsp;&nbsp;}</span></div><div><span></span></div><div><span>&nbsp;&nbsp;</span><span>return</span><span>&nbsp;(</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;</span><span>div</span><span>&nbsp;</span><span>className</span><span>=</span><span>'slideshow'</span><span>&nbsp;</span><span>style</span><span>=</span><span>{</span><span>{&nbsp;</span><span>fontFamily:</span><span>&nbsp;</span><span>'Arial&nbsp;Narrow'</span><span>&nbsp;}</span><span>}</span><span>&gt;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;</span><span>div</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>className</span><span>=</span><span>'slideshowSlider'</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>style</span><span>=</span><span>{</span><span>{&nbsp;</span><span>transform:</span><span>&nbsp;</span><span>`translate3d(</span><span>${</span><span>-</span><span>index</span><span>&nbsp;*&nbsp;</span><span>100</span><span>}</span><span>%,&nbsp;0,&nbsp;0)`</span><span>&nbsp;}</span><span>}</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&gt;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>{</span><span>colors</span><span>.</span><span>map</span><span>((</span><span>backgroundColor</span><span>,&nbsp;</span><span>index</span><span>)&nbsp;</span><span>=&gt;</span><span>&nbsp;(</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;</span><span>div</span><span>&nbsp;</span><span>className</span><span>=</span><span>'slide'</span><span>&nbsp;</span><span>key</span><span>=</span><span>{</span><span>index</span><span>}</span><span>&gt;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;</span><span>div</span><span>&nbsp;</span><span>className</span><span>=</span><span>'textInSlide'</span><span>&nbsp;</span><span>style</span><span>=</span><span>{</span><span>{&nbsp;</span><span>fontSize:</span><span>&nbsp;</span><span>17</span><span>&nbsp;}</span><span>}</span><span>&gt;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>{</span><span>text</span><span>[</span><span>index</span><span>]</span><span>}</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;/</span><span>div</span><span>&gt;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;/</span><span>div</span><span>&gt;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;))</span><span>}</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;/</span><span>div</span><span>&gt;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;</span><span>div</span><span>&nbsp;</span><span>className</span><span>=</span><span>'slideshowDots'</span><span>&gt;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>{</span><span>colors</span><span>.</span><span>map</span><span>((</span><span>_</span><span>,&nbsp;</span><span>idx</span><span>)&nbsp;</span><span>=&gt;</span><span>&nbsp;(</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;</span><span>div</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>key</span><span>=</span><span>{</span><span>idx</span><span>}</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>className</span><span>=</span><span>{</span><span>`slideshowDot</span><span>${</span><span>index</span><span>&nbsp;===&nbsp;</span><span>idx</span><span>&nbsp;?&nbsp;</span><span>'&nbsp;active'</span><span>&nbsp;:&nbsp;</span><span>''</span><span>}</span><span>`</span><span>}</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>onClick</span><span>=</span><span>{</span><span>()&nbsp;</span><span>=&gt;</span><span>&nbsp;{</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>setIndex</span><span>(</span><span>idx</span><span>);</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><span>}</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&gt;&lt;/</span><span>div</span><span>&gt;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;))</span><span>}</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;/</span><span>div</span><span>&gt;</span></div><div><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;/</span><span>div</span><span>&gt;</span></div><div><span>&nbsp;&nbsp;);</span></div><div><span>}</span></code>",
      icon: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png',
    },
    {
      id: 7,
      title: 'Building an Android blogging app using Java',
      date: '16/11/2021',
      body: 'Describe the project',
      icon: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d7/Android_robot.svg/1200px-Android_robot.svg.png',
    },
    {
      id: 8,
      title: 'Building an ASP .NET website',
      date: '16/11/2021',
      body: 'Describe the project',
      icon: 'https://www.softfluent.fr/wp-content/uploads/2019/10/net-MVC.png',
    },
    {
      id: 9,
      title: 'Using C++ to find eigenvalues and eigenvectors',
      date: '16/11/2021',
      body: 'Describe the project',
      icon: 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/ISO_C%2B%2B_Logo.svg/1200px-ISO_C%2B%2B_Logo.svg.png',
    },
  ],
};
